openapi: 3.0.3
info:
  version: 0.0.1
  title: Price microservice
  description: |
    Price microservice

# Servers where this API is hosted
servers: 
  - url: http://35.228.61.228/
security:
  - ApiKeyAuth: []  
paths:
  '/md':
    get:
      summary: 'List `Price` objects.'
      description: |
        Fetches list of prices of all items we carry
      # This is an array of GET operation parameters:
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  persons:
                    type: array
                    items:
                      $ref: '#/components/schemas/ListOfMasterdata'
                  nextPageToken:
                    description: |
                      A token which can be sent as `pageToken`
                      to retrieve the next page.
                    type: string
  '/md/{name}':
    get:
      description: 'Retrieve a single Person object.'
      parameters:
        - name: name
          in: path
          description: |
            Unique identifier of the desired person object.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Masterdata'
        '404':
          description: 'Item was not found'
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
  schemas:
    ListOfMasterdata:
      title: List of Masterdata
      type: array
      items:
        $ref: '#/components/schemas/Masterdata'
    Masterdata:
      title: Masterdata
      type: object
      properties:
        name:
          description: |
            name of the item
            Format: `persons/{personId}`
          type: string
          example: "price/a353-x51d"
          pattern: 'price\/[a-z0-9-]+'
        desc:
          description: 'the description of the item'
          type: string
        imgUrl:
          description: 'the url to the image'
          type: string
        id:
          description: 'uuid of the item in question (internal only)'
          type: string
